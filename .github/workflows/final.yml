name: FINAL

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy'
        required: true

concurrency: staging

env:
  build_workflow_name: upload-artemis.yml

jobs:
  check-build-status:
    runs-on: ubuntu-latest
    outputs:
      build_workflow_run_id: ${{ steps.set_build_workflow_id.outputs.workflow_id }} 
    steps:
      - name: Get latest build workflow run
        id: get_workflow_run
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/${{ github.repository }}/actions/workflows/${{ env.build_workflow_name }}/runs?branch=${{ github.event.inputs.branch }}&per_page=1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set build workflow ID
        id: set_build_workflow_id
        run: |
          WORKFLOW_ID=$(echo '${{ steps.get_workflow_run.outputs.data }}' | jq -r '.workflow_runs[0].id')
          echo "workflow_id=$WORKFLOW_ID" >> $GITHUB_OUTPUT
  
      - name: Check for war artifact
        id: verify_artifact
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/${{ github.repository }}/actions/runs/${{ fromJson(steps.get_workflow_run.outputs.data).workflow_runs[0].id }}/artifacts?name=Artemis.war
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
      - name: Verify artifact exists
        id: check_result
        run: |
          TOTAL_COUNT=$(echo '${{ steps.verify_artifact.outputs.data }}' | jq -r '.total_count')
            
          if [ "$TOTAL_COUNT" -gt 0 ]; then
            echo "Found Artemis.war artifact in latest build"
          else
            echo "::error::No Artemis.war artifact found in latest build!"
            exit 1
          fi

  deploy:
    needs: check-build-status
    runs-on: ubuntu-latest
    env:
      HEALTH_CHECK_URL: "https://artemis-staging-localci.artemis.cit.tum.de/management/health"
      WORKFLOW_RUN_ID: ${{needs.check-build-status.outputs.build_workflow_run_id}}

    timeout-minutes: 30
    
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: Artemis.war
          path: artifacts
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ env.WORKFLOW_RUN_ID  }}

      - name: Display downloaded files
        run: |
            ls -R downloads
            echo "Content of the file:"
            cat artifacts/Artemis-*.war

      
      - name: Verify Primary Node Deployment
        id: verify_deployment
        run: |
          while true; do
            echo "Performing health check..."
      
            RESPONSE=$(curl -s -f $HEALTH_CHECK_URL || echo '{"status":"DOWN"}')
            STATUS=$(echo $RESPONSE | jq -r '.status')
      
            if [ "$STATUS" = "UP" ]; then
              echo "Health check passed! Application is UP"
              exit 0
            else
              echo "Health check failed. Status: $STATUS"
              echo "Waiting 30 seconds before next attempt..."
              sleep 30
            fi
          done
